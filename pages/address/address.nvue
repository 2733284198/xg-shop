<template>
	<view class="page">
		<view class="address-list">
			<view class="address-info" :class="{'bottom-border': addressIndex !== addressListCount}" v-for="(addressInfo, addressIndex) of addressList" :key="addressIndex">
				<view class="name-and-phone">
					<text class="name">{{addressInfo.name}}</text>
					<text class="phone">{{addressInfo.phone}}</text>
					<text class="default-tag common-tag" v-if="addressInfo.is_default">默认</text>
					<text class="custom-tag common-tag" v-if="addressInfo.tag">{{addressInfo.tag}}</text>
				</view>
				<view class="address-and-icon">
					<text class="address">{{addressInfo.district}} {{addressList.detail_address}}</text>
					<text class="edit-icon" :style="{'font-family': 'xg-iconfont'}" @tap="editIconTap(addressIndex)">&#xe616;</text>
				</view>
			</view>
		</view>
		
		<view class="add-address-btn" @tap="addAddressBtnTap">
			<text class="plus-icon" :style="{'font-family': 'xg-iconfont'}">&#xe61e;</text>
			<text class="add-address-btn-text">新建收货地址</text>
		</view>
	</view>
</template>

<script>
	import querystring from 'querystring';
	import data from '@/data/address/address.js';
	
	export default {
		data() {
			return {
				addressList: [],
			}
		},
		async onLoad() {
			const addressListData = data.addressList();
			this.addressList = await addressListData;
		},
		computed: {
			addressListCount() {
				return this.addressList.length - 1; 
			}
		},
		methods: {
			editIconTap(index) {
				const addressQuerystring = querystring.stringify(this.addressList[index]);
				// console.log(addressQuerystring);
				uni.navigateTo({
					url: `/pages/address/edit-address?type=edit&${addressQuerystring}`,
					success: res => {},
					fail: () => {},
					complete: () => {}
				});
			},
			addAddressBtnTap() {
				uni.navigateTo({
					url: '/pages/address/edit-address?type=add',
					success: res => {},
					fail: () => {},
					complete: () => {}
				});
			}
		}
	}
</script>

<style lang="scss">
	.page {
		background-color: $uni-bg-color;
		
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		flex-direction: column;
		align-items: center;
	}
	
	.bottom-border {
		border-bottom-width: 0.5px;
		border-style: solid;
		border-color: $uni-border-color;
	}
	
	.address-list {
		
	}
	
	.address-info {
		width: 750rpx;
		padding-top: $uni-spacing-row-base;
		padding-bottom: $uni-spacing-row-base;
		padding-left: $uni-spacing-col-base;
		padding-right: $uni-spacing-col-base;
	}
	
	.name-and-phone {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		flex-direction: row;
		align-items: center;
	}
	.name {
		font-size: $uni-font-size-base;
		font-weight: bold;
		min-width: 180rpx;
	}
	.phone {
		font-size: $uni-font-size-base;
		font-weight: bold;
		margin-left: $uni-spacing-col-base;
	}
	.common-tag {
		font-size: $uni-font-size-mi;
		color: $uni-text-color-white;
		border-radius: $uni-border-radius-sm;
		padding-left: 3px;
		padding-right: 3px;
		padding-top: 1px;
		padding-bottom: 1px;
		margin-left: $uni-spacing-col-base;
	}
	.default-tag {
		background-color: $uni-bg-color-red;
	}
	.custom-tag {
		background-color: $uni-bg-color-blue;
	}
	
	.address-and-icon {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		flex-direction: row;
		justify-content: space-between;
		
		margin-top: $uni-spacing-row-sm;
	}
	.address {
		font-size: $uni-font-size-sm;
	}
	.edit-icon {
		font-size: $uni-font-size-sm;
	}
	
	.add-address-btn {
		position: fixed;
		bottom: $uni-spacing-row-base;
		height: 80rpx;
		width: 500rpx;
		
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		flex-direction: row;
		align-items: center;
		justify-content: center;
		
		background-color: $uni-bg-color-red;
		border-radius: 100000px;
	}
	.plus-icon {
		// border-width: 1px;
		font-size: $uni-font-size-sm;
		font-weight: bold;
		color: $uni-text-color-white;
	}
	.add-address-btn-text {
		// border-width: 1px;
		margin-left: $uni-spacing-col-base;
		font-size: $uni-font-size-base;
		color: $uni-text-color-white;
	}
</style>
