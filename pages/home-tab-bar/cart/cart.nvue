<template>
	<view class="page">
		<scroll-view class="page-scroll" scroll-y="true" @scroll="pageScroll">
			<view class="dock-placeholder" :style="{height: dockHeight + 'px'}"></view>
			
			<!-- 空购物车 -->
			<view v-if="isEmptyCart" class="empty-cart">
				<view class="empty-cart-label">
					<image class="empty-cart-icon" :src="emptyCartConfig.icon"></image>
					<text class="empty-cart-text">{{emptyCartConfig.text}}</text>
				</view>
				
				
				<view class="nav-btn-list">
					<navigator class="btn" v-for="(btn, btnIndex) of emptyCartConfig.navBtnList" :key="btnIndex" :url="btn.url">
						<text class="btn-text">{{btn.text}}</text>
					</navigator>
				</view>
			</view>
			
			<view v-if="!isEmptyCart" class="cart-section">
				<view class="cart-order" v-for="(order, orderIndex) of orderList" :key="orderIndex">
					<tpl-cart-order :shop="order.shop" :productList="order.productList"></tpl-cart-order>
				</view>
			</view>
			
			<!-- 推荐产品 -->
			<view class="recommended-product-list-title">
				<xg-icon :fontFamily="recommendedProductListTitleConfig.lineIcon.fontFamily" :text="recommendedProductListTitleConfig.lineIcon.text" :textStyle="recommendedProductListTitleConfig.lineIcon.textStyle"></xg-icon>
				<xg-icon :vertical="false" :fontFamily="recommendedProductListTitleConfig.recommendIcon.fontFamily" :thumb="recommendedProductListTitleConfig.recommendIcon.thumb" :title="recommendedProductListTitleConfig.recommendIcon.title" :iconStyle="recommendedProductListTitleConfig.recommendIcon.iconStyle" :titleStyle="recommendedProductListTitleConfig.recommendIcon.titleStyle"></xg-icon>
				<xg-icon :fontFamily="recommendedProductListTitleConfig.lineIcon.fontFamily" :text="recommendedProductListTitleConfig.lineIcon.text" :textStyle="recommendedProductListTitleConfig.lineIcon.textStyle"></xg-icon>
			</view>
			
			<tpl-product-list class="recommended-product-list" :columnCount="recommendedProductListConfig.columnCount" :columnGap="recommendedProductListConfig.columnGap" :rowGap="recommendedProductListConfig.rowGap" :leftGap="recommendedProductListConfig.leftGap" :rightGap="recommendedProductListConfig.rightGap" :productList="recommendedProductList"></tpl-product-list>
		</scroll-view>
		
		<view class="buy-section">
			<view class="check-and-sum">
				<view class="check-all">
					<tpl-check :checked="isAllChecked" @checkTap="checkAllBtnTap"></tpl-check>
					<view class="check-label">
						<text class="check-label-text">全选</text>
					</view>
				</view>
				<view class="sum">
					<view class="sum-label">
						<text class="sum-label-text">合计：</text>
					</view>
					<view class="sum-number">
						<text class="sum-number-text">￥{{totalMoney}}</text>
					</view>
				</view>
			</view>
			<navigator class="buy-btn" hover-class="none" url="">
				<text class="buy-btn-text">去结算({{productTotalCount}})</text>
			</navigator>
		</view>
		
		<view class="dock">
			<xg-dock ref="dock" status-bar  @getDockHeight="getDockHeight">
				<view class="dock-bg"></view>
				<xg-nav-bar hasTitle :fixedHeight="navBarConfig.fixedHeight" :title="navBarConfig.title" :right="navBarConfig.right">
				</xg-nav-bar>
			</xg-dock>
		</view>
		
		<xg-status-bar class="status-bar"></xg-status-bar>
	</view>
</template>

<script>
	import config from '@/config/home-tab-bar/cart/cart.js';
	import data from "@/data/home-tab-bar/cart/cart.js";
	
	export default {
		mixins: [config],
		data() {
			return {
				dockHeight: 0,
				
				isEmptyCart: false,
				
				orderList: [],
				
				recommendedProductList: [],
			}
		},
		computed: {
			productTotalCount() {
				let totalCount = 0;
				this.orderList.forEach(order => {
					order.productList.forEach(product => {
						if (product.checked) {
							totalCount += 1;
						}
					});
				});
				return totalCount;
			},
			totalMoney() {
				let totalMoney = 0;
				this.orderList.forEach(order => {
					order.productList.forEach(product => {
						if (product.checked) {
							totalMoney += Number(product.price);
						}
					});
				});
				return totalMoney;
			},
			isAllChecked() {
				let isAllChecked = true;
				this.orderList.forEach(order => {
					order.productList.forEach(product => {
						if (!product.checked) {
							isAllChecked = false;
						}
					});
				});
				return isAllChecked;
			}
		},
		async created() {
			const orderListData = data.orderList();
			const recommendedProductListData = data.recommendedProductList();
			this.orderList = await orderListData;
			this.recommendedProductList = await recommendedProductListData;
		},
		methods: {
			getDockHeight(e) {
				this.dockHeight = e;
			},
			
			pageScroll(e) {
				this.$refs['dock'].scrollDeltaTo(e.detail.deltaY);
			},
			
			checkAllBtnTap(e) {
				if (e) {
					this.orderList.forEach((order, orderIndex) => {
						order.productList.forEach((product, productIndex) => {
							this.$set(this.orderList[orderIndex]['productList'][productIndex], 'checked', true);
						});
					});
				} else {
					this.orderList.forEach((order, orderIndex) => {
						order.productList.forEach((product, productIndex) => {
							this.$set(this.orderList[orderIndex]['productList'][productIndex], 'checked', false);
						});
					});
				}
			}
		}
	}
</script>

<style lang="scss">
	.status-bar {
		background-color: $uni-bg-color;
		position: absolute;
		top: 0;
	}
	
	.page {
		position: absolute;
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
	}
	
	.page-scroll {
		position: absolute;
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
	}
	
	.dock {
		position: absolute;
		top: 0;
		right: 0;
		left: 0;
	}
	.dock-bg {
		position: absolute;
		top: 0;
		right: 0;
		left: 0;
		bottom: 0;
		background-color: $uni-bg-color;
		// border-width: 1px;
	}
	
	
	.empty-cart {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		flex-direction: column;
		align-items: center;
		
		margin-top: 1px;
		padding-top: $uni-spacing-row-hg;
		padding-bottom: $uni-spacing-row-lg;
		background-color: $uni-bg-color;
	}
	.empty-cart-label {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		flex-direction: row;
		align-items: center;
	}
	.empty-cart-icon {
		width: $uni-icon-size-base;
		height: $uni-icon-size-base;
	}
	.empty-cart-text {
		font-size: $uni-font-size-base;
		color: $uni-text-color-grey;
		margin-left: $uni-spacing-col-base;
	}
	
	.nav-btn-list {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		flex-direction: row;
		align-items: center;
		margin-top: $uni-spacing-row-lg;
	}
	.btn {
		border-width: 1px;
		border-style: solid;
		border-color: $uni-border-color;
		border-radius: 10000px;
		padding-left: $uni-spacing-col-hg;
		padding-right: $uni-spacing-col-hg;
		margin-left: $uni-spacing-col-base;
		margin-right: $uni-spacing-col-base;
		
		padding-top: $uni-spacing-row-sm;
		padding-bottom: $uni-spacing-row-sm;
		
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		flex-direction: row;
		align-items: center;
		justify-content: center;
	}
	.btn-text {
		font-size: $uni-font-size-base;
	}
	
	.cart-section {
		
	}
	.cart-order {
		margin-top: $uni-spacing-row-base;
	}
	
	.recommended-product-list-title {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		flex-direction: row;
		align-items: center;
		justify-content: center;
		
		margin-top: $uni-spacing-row-base;
	}
	.recommended-product-list {
		margin-top: $uni-spacing-row-sm;
	}
	
	.buy-section {
		position: absolute;
		bottom: 0;
		left: 0;
		right: 0;
		
		background-color: $uni-bg-color;
		
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
		
		box-shadow: 0px 1px 2px 1px $uni-border-color;
		
		padding: $uni-spacing-row-sm $uni-spacing-col-lg;
	}
	.check-and-sum {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		flex-direction: row;
		align-items: center;
	}
	.check-all {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		flex-direction: row;
		align-items: center;
	}
	.check-label {
		margin-left: $uni-spacing-col-base;
	}
	.check-label-text {
		font-size: $uni-font-size-sm;
	}
	.sum {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		flex-direction: row;
		align-items: center;
	}
	.sum-label {
		margin-left: $uni-spacing-col-lg;
	}
	.sum-label-text {
		font-size: $uni-font-size-base;
	}
	.sum-number {
		
	}
	.sum-number-text {
		font-size: $uni-font-size-base;
	}
	.buy-btn {
		background-color: $uni-bg-color-red;
		border-radius: 10000px;
		
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		flex-direction: row;
		align-items: center;
		justify-content: center;
		
		padding: $uni-spacing-row-base $uni-spacing-col-base;
	}
	.buy-btn-text {
		font-size: $uni-font-size-base;
		color: $uni-text-color-white;
	}
</style>
