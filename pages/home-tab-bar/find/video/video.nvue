<template>
	<scroll-view class="page-scroll" scroll-y :scroll-top="pageScrollTop" @scroll="pageScroll">
		<view class="dock-placeholder" :style="{height: finddockHeight + 'px'}"></view>
		
		<xg-waterfall :columnCount="waterfallConfig.columnCount" :columnGap="waterfallConfig.columnGap" :leftGap="waterfallConfig.leftGap" :rightGap="waterfallConfig.rightGap" @getWaterfallItemWidth="getWaterfallItemWidth">
			<xg-waterfall-item :ref="'waterfall-item-' + videoIndex" v-for="(video, videoIndex) of videoList" :key="videoIndex">
				<view class="video">
					<image class="video-cover-image" :style="{width: videoCoverImageWidth + 'px', height: videoCoverImageWidth*videoCoverImageAspectRatio[videoIndex] + 'px'}" :src="video.coverImage" mode="widthFix" @load="videoCoverImageLoad(videoIndex, $event)"></image>
					<view class="video-info">
						<view class="video-desc">{{video.desc}}</view>
						<view class="user-and-like">
							<view class="user-info">
								<image class="user-avatar" :src="video.avatar"></image>
								<text class="user-nickname">{{video.nickname}}</text>
							</view>
							<view class="like">
								<text class="like-icon" :style="{'font-family': thumbUpIconConfig.fontFamily}">{{thumbUpIconConfig.text}}</text>
								<text class="like-count">{{video.likeCount}}</text>
							</view>
						</view>
					</view>
				</view>
			</xg-waterfall-item>
		</xg-waterfall>
	</scroll-view>
</template>

<script>
	import data from '@/data/home-tab-bar/find/video/video.js';
	import config from '@/config/home-tab-bar/find/show/show.js';
	
	const customData = {
		old: {
			pageScrollTop: 0,
		},
	}
	
	export default {
		mixins: [config],
		inject: ['find'],
		data() {
			return {
				pageScrollTop: 0,
				waterfallItemWidth: 0,
				videoList: [],
				videoCoverImageAspectRatio: [],
				videoCoverImageWidth: 0,
			}
		},
		computed: {
			finddockHeight() {
				// console.log(this.find.dockHeight);
				return this.find.dockHeight;
			},
		},
		async created() {
			const videoListData = data.videoList();
			
			this.videoList = await videoListData;
		},
		methods: {
			toPx(value) {
				const result = /(\d+)(\w+)/.exec(value);
				if ('rpx' === result[2].trim()) {
					return uni.getSystemInfoSync().screenWidth * Number(result[1]) / 750;
				} else if('px' === result[2].trim()) {
					return Number(result[1]);
				} else {
					throw new TypeError(`${value}单位格式不正确`);
				}
				
			},
			
			pageScroll(e) {
				customData.old.pageScrollTop = e.detail.scrollTop;
				// console.log(e);
				this.$emit('scrollDeltaY', e.detail.deltaY);
			},
			//页面切换时设置滚动位置，需使用this.$refs引用
			scrollDeltaYTo(deltaY) {
				this.pageScrollTop = customData.old.pageScrollTop + deltaY;
			},
			
			getWaterfallItemWidth(e) {
				this.videoCoverImageWidth = e;
			},
			videoCoverImageLoad(index, e) {
				this.$set(this.videoCoverImageAspectRatio, index, e.detail.height/e.detail.width);
				setTimeout(() => {
					this.$refs['waterfall-item-' + index][0].calculateLayoutOnce();
				}, 10);
			}
		},
	}
</script>

<style lang="scss" scoped>
	.page-scroll {
		position: absolute;
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
	}
	
	.video {
		background-color: $uni-bg-color;
		border-radius: $uni-border-radius-base;
		margin-top: $uni-spacing-row-base;
	}
	.video-cover-image {
		border-top-left-radius: $uni-border-radius-base;
		border-top-right-radius: $uni-border-radius-base;
	}
	.video-info {
		padding-left: $uni-spacing-col-base;
		padding-right: $uni-spacing-col-base;
	}
	.video-desc {
		font-size: $uni-font-size-base;
		margin-top: $uni-spacing-row-base;
	}
	.user-and-like {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
		
		margin-top: $uni-spacing-row-base;
		margin-bottom: $uni-spacing-row-base;
	}
	.user-info {
		// border-width: 1px;
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		flex-direction: row;
		align-items: center;
		
	}
	.user-avatar {
		width: $uni-icon-size-sm;
		height: $uni-icon-size-sm;
		border-radius: $uni-border-radius-circle;
	}
	.user-nickname {
		font-size: $uni-font-size-sm;
		margin-left: $uni-spacing-col-sm;
	}
	.like {
		// border-width: 1px;
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		flex-direction: row;
		align-items: center;
	}
	.like-icon {
		font-size: $uni-font-size-sm;
	}
	.like-count {
		font-size: $uni-font-size-sm;
		margin-left: $uni-spacing-col-sm;
	}
</style>
