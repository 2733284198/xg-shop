<template>
	<scroll-view class="page-scroll" scroll-y="true" :scroll-top="pageScrollTop" @scroll="pageScroll">
		<view class="dock-placeholder" :style="{height: finddockHeight + 'px'}"></view>
		
		<xg-waterfall :columnCount="waterfallConfig.columnCount" :columnGap="waterfallConfig.columnGap" :leftGap="waterfallConfig.leftGap" :rightGap="waterfallConfig.rightGap" @getWaterfallItemWidth="getWaterfallItemWidth">
			<xg-waterfall-item :ref="'waterfall-item-' + showIndex" v-for="(showItem, showIndex) of showList" :key="showIndex">
				<view class="show">
					<image class="show-image" :style="{width: showImageWidth + 'px', height: showImageWidth*showImageAspectRatio[showIndex] + 'px'}" :src="showItem.image" mode="widthFix" @load="showImageLoad(showIndex, $event)"></image>
					<text class="show-title line-limit">{{showItem.title||showItem.desc}}</text>
					<view class="user-and-thumb-up">
						<view class="user-info">
							<image class="avatar" :src="showItem.user.avatar" mode=""></image>
							<text class="username">{{showItem.user.username}}</text>
						</view>
						<view class="thumb-up">
							<text class="thumb-up-icon" :style="{'font-family': thumbUpIconConfig.fontFamily}">{{thumbUpIconConfig.text}}</text>
							<text class="thumb-up-number">{{showItem.thumb_up_number}}</text>
						</view>
					</view>
				</view>
			</xg-waterfall-item>
		</xg-waterfall>
	</scroll-view>
</template>

<script>
	import data from '@/data/home-tab-bar/find/show/show.js';
	import config from '@/config/home-tab-bar/find/show/show.js';
	
	const customData = {
		old: {
			pageScrollTop: 0,
		}
	};
	
	export default {
		mixins: [config],
		inject: ['find'],
		data() {
			return {
				pageScrollTop: 0,
				showList: [],
				showImageAspectRatio: [],
				showImageWidth: 0,
			}
		},
		async created() {
			const showListData = data.showList();
			this.showList = await showListData;
		},
		computed: {
			finddockHeight() {
				// console.log(this.find.dockHeight);
				return this.find.dockHeight;
			},
		},
		methods: {
			toPx(value) {
				const result = /(\d+)(\w+)/.exec(value);
				if ('rpx' === result[2].trim()) {
					return uni.getSystemInfoSync().screenWidth * Number(result[1]) / 750;
				} else if('px' === result[2].trim()) {
					return Number(result[1]);
				} else {
					throw new TypeError(`${value}单位格式不正确`);
				}
				
			},
			
			pageScroll(e) {
				customData.old.pageScrollTop = e.detail.scrollTop;
				// console.log(e);
				this.$emit('scrollDeltaY', e.detail.deltaY);
			},
			//页面切换时设置滚动位置，需使用this.$refs引用
			scrollDeltaYTo(deltaY) {
				this.pageScrollTop = customData.old.pageScrollTop + deltaY;
				// console.log(this.pageScrollTop);
			},
			getWaterfallItemWidth(e) {
				this.showImageWidth = e;
			},
			
			showImageLoad(index, e) {
				// this.showImageAspectRatio[index] = e.detail.height/e.detail.width;
				// console.log(index ,e);
				this.$set(this.showImageAspectRatio, index, e.detail.height/e.detail.width);
				setTimeout(() => {
					this.$refs['waterfall-item-' + index][0].calculateLayout();
				}, 10);
			}
		},
	}
</script>

<style lang="scss" scoped>
	.page-scroll {
		position: absolute;
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
	}
	
	.dock-placeholder {
		margin-bottom: $uni-spacing-row-base;
	}
	
	.show {
		// width: 300rpx;
		margin-bottom: $uni-spacing-row-base;
		border-radius: $uni-border-radius-base;
		background-color: $uni-bg-color;
	}
	.show-image {
		border-top-left-radius: $uni-border-radius-base;
		border-top-right-radius: $uni-border-radius-base;
	}
	.line-limit {
		text-overflow: ellipsis;
		/* #ifdef APP-PLUS-NVUE */
		lines: 2;
		/* #endif */
		
		/* #ifndef APP-PLUS-NVUE */
		overflow: hidden;
		display: -webkit-box;
		-webkit-line-clamp: 2;
		-webkit-box-orient: vertical;
		/* #endif */
	}
	.show-title {
		margin-left: $uni-spacing-col-base;
		margin-right: $uni-spacing-col-base;
		margin-top: $uni-spacing-row-base;
		font-size: $uni-font-size-sm;
	}
	
	.user-and-thumb-up {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
		margin-left: $uni-spacing-col-base;
		margin-right: $uni-spacing-col-base;
	}
	
	.user-info {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		flex-direction: row;
		align-items: center;
		margin-top: $uni-spacing-row-base;
		margin-bottom: $uni-spacing-row-base;
	}
	.avatar {
		width: $uni-icon-size-mi;
		height: $uni-icon-size-mi;
		border-radius: $uni-border-radius-circle;
		margin-right: $uni-spacing-col-base;
	}
	.username {
		font-size: $uni-font-size-sm;
		color: $uni-text-color-grey;
	}
	
	.thumb-up {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		flex-direction: row;
		align-items: center;
	}
	.thumb-up-icon {
		font-size: $uni-font-size-sm;
		color: $uni-text-color-grey;
	}
	.thumb-up-number {
		font-size: $uni-font-size-sm;
		margin-left: $uni-spacing-col-sm;
	}
</style>
